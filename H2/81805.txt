Първото нещо, което реших да направя беше да пусна операционната система на virtualbox, да получа
допълнително информация какво се случва и какво може да се е счупило. Видях, че има операционна
система freedos и в боот менюто има някакви опции за стартиране като jemmex и emm386. Реших да
гугълна какво означавата тези термини и прочетох wikipeadia страницата на emm386
https://en.wikipedia.org/wiki/EMM386

Разгледах и другите секции на уики страницата, да разбера какво е UMA и EMS, което ме доведе до bank
switching: https://en.wikipedia.org/wiki/Bank_switching. Това не знам дали ще е от полза като
информация, ама ми беше интересно. Доколкото разбрах EMS е спецификация, която е на базата на bank
switching. bank switching по моето разбиране е добавяне на още едно устройство физическа памет(РАМ).
Използва се d flip flop/latch за да се сменя между това върху кое устройство да се чете и пише. 

Отворих една от опциите в boot менюто и ми се зареди FreeDOS операционната система. Използвах help
командата и видях познатата fdisk команда. Прочетох, че се използва пак за partitioning. Използвах
я, да видя какви parition-и има на hard disk-а. Имаше 3 partition-а, които ми излезнаха два бяха на
non-dos linux OS и един беше на FreeDos върху, който работех аз. Основната ми идея за това защо се е
счупил grub bootloader-а е, че той е бил презаписан при инсталацията на FreeDos.  Друга опция, която
ми хрумва е да има два bootloader-а и при стартиране на операционната система да се намира първо
този на FreeDOS и grub да не бива използван.

След като изхабих малко време да разглеждам FreeDOS-а реших да видя дали мога да boot-на от флашка,
както подсказва условието на заданието и дали от там мога да влезна в recovory mode и да инсталирам
grub bootloader-а.

Докато чаках да се свали операционната система реших да използвам xxd командата на дадения vdi файл
и направих grep за GRUB. Излезнаха доста match-ове за GRUB и GRUB2. Това ме навежда на мисълта, че
GRUB-а не е бил затрит. Може да е бил повредеден все пак или просто да не се използва, но със
сигурност не е затрит.

Влезнах в rescue mode, да видя дали от там мога да поправя GRUB-а. Написах fdisk -l, да видя какви
данни ще получа. Видях, че като boot partition e избран /dev/sda1, който съдържа FreeDos.
Декриптирах с asdf /dev/sda3. И с xxd погледнах първите 512 байта на /dev/sda2 и /dev/sda3 и бяха
само нули.  Съответно те нямат MBR и няма как да са boot partition-и. /dev/sda1 съдържаше MBR, но
това очевидно не ни върши работа. Трябва отново да създам MBR заедно с GRUB и да направя някой от
другите parition-и boot. Поне това ми е идеята засега. Не гарантирам, че е точно това целта на
заданието, но ми изглежда като валидна идея за началото.

По време на влизането в rescue режим излезе съобщение, че има boot partition, което аз бях забелязал
първия път, когато пуснах image-а, но не се бях замислил достатъчно кой точно е този boot partition.
Използва lsblk, да видя, къде са mount-нати /dev/sda2 и /dev/sda3 и видях, че /dev/sda2 е именно
/boot, в който се съдържа информация за grub. Щом има /boot partition остана да видя как да го
използвам, защото до сега бях само чувал, че е добра идея да имам отделен /boot partition XD.

След някакво време прекарано в чете разбрах, че данните в /boot се четат основно от grub и че не се
използва самия partition за boot-ване, а там по-скоро са файловете, които гръб създава и използва и
неговата конфигурация.  Също така разбрах, че има два начина за инсталиране на grub. 1) Слагаме го
между parition-ите и началото на master boot record-а 2) Слагаме grub на файловата система, като
това може да води до проблеми, ако нещо го размести.  Пак в MBR-а трябва да има информация къде на
файловата система точно се намира.  Grub документацията препоръчва 1), като 2) май е за частни
случаи.  Link: https://www.gnu.org/software/grub/manual/grub/grub.html#Images

Погледнах началото на MBR на /dev/sda и той ми изглеждаеше сравнително счупен.  Излизаше текст от
сорта на no active partition found. Read error while reading drive. Хипотетчино тук трябва да е
самия grub според мен, който да се вика в началото и да се използва при boot. За тест реших да
изпълня същата команда на моята машина (xxd /dev/sda) и видях, че там се съдържат данни за Grub.
Остана въпроса как да възстановя тези данни и дали да не преинсталирам цялостно grub.  Това разбира
се ме притеснява да не счупи диска, ама засега е най-добрата ми идея как да реша проблем с
boot-ването.

В процес на търсене на информация за решаване на проблема си попданах на този линк:
https://www.av8n.com/computer/htm/grub-reinstall.htm . Реших да изтествам написаното вътре, да видя
дали ще ми свърши работа.  След grub-install /dev/sda командата погледнах резултата с xxd и на пръв
поглед изглеждаше ок. Отново пишеше обаче: no active partition found. Реших да рестартирам машината
все пак и да видя какъв е резултатът. Вече излизаше grub boot менюто. Лошото е, че нямаше freedos,
като опция за boot. Може да се наложи да я конфигурирам на ръка в grub.cfg или някоя команда. Според
това, което прочетох в grub документацията по подразбиране grub не поддържа boot-ване на
DOS/Windows, а прехвърля щафетата на другия bootloader и това се нарича chain-loading. Дали точно
това трябва да направя обаче не съм категоричен. Друг проблем, с който се сблъсках е, че не знам
потребител, с когото да се логна на машината и стандратната парола asdf този път не ми свърши работа
XD. Това означава, че през grub трябва да се логна като root потребител на машината. Това съм го
правил преди, ама в момента не ми идват точните команди, така че трябва да си припомня малко.

Преди да премина към б) реших обаче да помисля как преди да дам на агент 006 лаптопа да добавя
freedos към boot менюто на grub, защото иначе ще имаме разминаване с историята. Ще поразуча
концепцията от по-горе за chain-loading малко повече, като начало. Установих, че проблема се решава
лесно, като прост трябва да съм монтирал freedos докато правя grub-install или просто да направя
update-grub с монтирания freedos. След като направих това вече в boot менюто се показваха и двете
опции - едната за debian и една за fredos. Тук се използва chain-loading, ама не ми се наложи аз да
го конфигурирам ръчно. Видях тук https://wiki.debian.org/GrubEFIReinstall и се вдъхнових да
поразгледам за update-grub и видях в stackexchange, че трябва да е монтиран paritition-а, да го
засече update-grub и да генерира grub.cfg с нея.

Бързо открих как да получа достъп до root потребителя. Миналата година карах курс при Хакман и
разглеждахме точно тази задача. Използвах това repository:
https://github.com/hackman/linux-sysadmin-course/blob/master/lecture-notes/lecture-02.txt В него е
описано как може на linux командата да подадем init параметър, който сменя първия процес, пуснат от
операционната система.Когато Kernel-а, intird-то и root файловата система се заредят се дава контрол
на този процес. init се стартира от името на root потребителя. Ние се възползваме от това, като
подменяме init процеса с /bin/bash, като подаваме параметър на кърнъла при стартирането на
операционната система init=/bin/bash. Както казах тази команда се изпълнява от името на root и
съответно ние получаваме root достъп след като тя зареди. За да получим пълен достъп за четене и
писане върху опеционната система ние искаме да remount-нем с rw права вече заредената root файлова
система. Тя не винаги е mount-ната с тези права по подразбиране и затова се налага използването на
тази команда. Вече можем да правим каквото си искаме на машината, включително и да сменим root паролата
с passwd на asdf примерно. Така нашият агент вече може спокойно да рестартира машината и да влезне
като root без проблеми. Може същот така да пусне /sbin/init и да продължи стартирането на
операционната система без да рестартира.

Още един линк, който използва да прегледам какви параметри можем да подадем на кърнъла при boot:
https://wiki.archlinux.org/index.php/Kernel_parameters

Ето още един линк със стъпките как да възстановим root паролата:
http://www.softpanorama.org/Commercial_linuxes/Startup_and_shutdown/root_password_recovery.shtml
Поиграх си да разбера точно защо ни трябваше да remount-ваме и с какви права се mount-ва / по
подразбиране, ама не намерих директен отговор различен от може и да не е с rw права, така че 
предполагам, че зависи.

Понеже някои неща по-рано бях направил в repair режим и не знам дали това беше позволено по условие
реших да видя как бих стигнал до положението, в което ме вкара repair от live image. Вариантът,
който ми хрумна е да mount-на /dev/sda3 под /mnt и в него под /mnt/boot да mount-на /dev/sda2.
Същото мога да направя с псевдофайловите системи (като /proc) на операционната система и да chroot-на в /mnt.
Така на теория би трябвало да съм в положение подобно на repair mode, което не знам дали е 1/1, но
мисля, че е достатъчно близко.

Като време цялото нещо ми отне към 6 часа за а) и 30-60 минути за б) понеже знаех предварително как става.
Възстановяването на паролата беше за около 20 мин. Останалото време по-скоро разглеждах да си припомня точно
кога се монтираше / примерно или с какви права се монтира и подобни.
