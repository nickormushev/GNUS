Като първа стъпка реших да се опитам да намеря свестен jabberd клиент. И потърсих в гугъл top xmmp
clients XD. Топ резултатът беше този сайт, който съм виждал доста пъти преди:
https://www.slant.co/topics/981/~best-xmpp-clients-for-windows#2
В него беше споменат pidgin, което помня, че го бяхме споменали по ОС практикум за IRC чатове и
подобни. Реших да го отворя да видя и разбрах от сайта: https://pidgin.im/ , `e pidgin не е само
xmpp клиент, а работи с много протоколи, но цялостно си мисля, че в частност е xmpp клиент и
следователно пак върши работа, а и верятно ще го използваме основно за тестове. След като го
инсталирах потърсих в гугъл за сървъри, които мога да използвам за тестване и намерих този сайт:
https://list.jabber.at/ и си избрах jabber.minus273.org . Иронично си мислех, че името Никола Колев
ми звучи българско и като отворих сайта беше на български XD. Не знам как го нацелих, ама ми стана
гот. Остава да разбера как да се регистрирам. Тъжното е, че регистрацията е затворена :(. Явно няма
да е българския jabber сървър. После си избрах kode.im, защото беше втория линк, който цъкнах и си
направих профил. Пишеше и че работи с pidgin, макар че това не беше под въпрос. bazdara@kode.im ми е
измисленото име. Иначе успях да се вържа към сървъра и вече мога уж да си чатя с хора. Това не мога
да го тествам директно, защото Ирина е заета с други предмети. Така че ще продължа към четене на
RFC-та, а и зелената лампичка на pidgin ми казва, че май съм ок.

RFC2782:
Това rfc описва SRV(service) resource record-а на DNS. Идеята му е да може по-лесно service-и да се
местят от машина на машина или да работят на всички машини едновременно.

SRV RR има този формат:
_Service._Proto.Name TTL Class SRV Priority Weight Port Target 

Първо се пише името на сървиса(service name), който в нашия случай ще е xmpp(по-късно разбрах, че е
xmpp-server)

После в Proto казваме дали е TCP или UDP transport layer протокола, като в нашия случай е TCP според
уикипедия.

След това даваме име на dns domain-а на сървиса, който съответно би бил weber.openfmi.net или
fmi.fail. Съответно аз имам достъп до първия домейн само, така че ще използваме него.

TTL и Class сме ги говорили вече в домашното за DNS. Ама все пак да ги повторя. TTL е колко време да
се кешира дадено query, което са ни задали, а Class е IN за Internet. Има и други, но доколкото
разбрах не се използват вече.

SRV - типа на RR

Priority - колкото по-ниско толкова по-добре. DNS-а винаги ще отговаря с record-а с най-ниско
priority стига да имаме връзка до него. Самия DNS server сортира SRV записите по приоритет като
най-отгоре слага тези с най-нисък после сортира по weight, като по-голям weight е по-добър.

Weight - това е шанса дадаен DNS сървър да бъде избран. Колкото по-голямо число толкова по-голям е
шанса. Казва, че общо взето даден сървър е 4 пъти по мощен от друг.

Port - порта, на който ни слуша service-а. Според гугъл това е 5269 tcp за xmpp

Target - domain name-а на машината, която ще викаме, за който вероятно трябва да имаме glue record
за AAAA и A

RFC6335
Явно прибързах с предположението си за service name-а. Може би съм го научил, но това RFC е точно за
това как се определят service name-овете за различните transport layer протоколи. Съответно има
вероятност да е примерно jabberd, а не xmpp service name-а. Също така е обяснено как IANA дава порт
за даден протокол и как може да си го върне, ако протокола стане ненужен. Това разбрах засега от
overview-то. Време да задълбаем повече. Написано е и че част "Assigned Numbers" списъка за портове
рефериран в SRV RFC-то е obsolete и вече не се използва.

В даден момент, защото не е било ясно как точно IANA задава имена на сървисите/портовете си се е
стиганало до това да се създаде документ, който по много лесен начин ти дава достъп до тази
информация без да може да го контролира IANA. Официалната им документация с други думи е била зле и
затова се е появило това RFC. Сега се използва този сайт:
https://www.iana.org/assignments/service-names-port-numbers/service-names-port-numbers.xhtml?search=xmpp
В него потърсих за xmpp и намерих същия отговор за xmpp сървър. 5269 Обаче се усетих, че service
name-а ми горе трябва да е xmpp-server, а не само xmpp

В това rfc е казано и точно какво е service name, защото в другото дефиницията е неясна:
This document clarifies that the Service Label MUST be a service name
as defined herein with an underscore prepended.  The service name
SHOULD be registered with IANA and recorded in the Service Name and
Transport Protocol Port Number registry [PORTREG].
С две думи е казано, че трябва да отида в регистъра, който линкнах по-горе и от там да взема service
name-а и номера на порта.

Обяснен е и формата на service-name-а, като че трябва да е между 1 и 15 букви например. Обяснено е,
че може да се използват главни и малки букви, но все пак имената са case insesitive. Има и още ама
не виждам смисъл да го описвам цялото.

Портове - описано е, че портовете имат няколко състояния. Assigned, Unassigned и Reserved. Мисля,
че имената са доста ясн иза какво е всяко. Интересно е че крайните портове на range-овете от Well
know, Registered и Dynamic портовете са assigned на IANA, ако се наложи да се разширява range-а от
портове и правенето му на по-голям.

Да си призная не знам дали ми трябва цялото rfc, ама вече е късно. Разгледах принципите за именова
на IANA. Интересни са, но мисля, че е време да продължа напред. Общо взето целта е да ползват
възможно, най-малко портове(1 per service) и беше интересно да разбера, че ако запазя TCP port то
автоматично резервирам UDP, SCTP и DCCP портовете със същите числа. 

Сега видях, че това RFC е за справки, а не подробно четене. Емииии шанс. Стигнах до 8. докато се
усетя. Бих го дочел, защото съм в настроение, ама ми е ограничено времето, така че как реално мога
да поискам service-а ми да работи на даден порт може да почака да си направя service. Изглежда ми
като добра идея.

Преди да продължа реших да си оправя SRV RR-а на DNS-а. Сърбеше ме малко да попиша, а не само да
чета. Та сложих това за RR:
_xmpp-server._tcp IN SRV 0 0 5269 xmpp.weber.openfmi.net.
xmpp IN CNAME weber.openfmi.net

Създадох CNAME за weber с идеята, че на теория може в бъдеще xmpp да не е на същата машина и
по-лесно ще се промени. Понеже това е глупав довод, като се има предвид, че е един ред XD. Може да
кажем, че е по-лесно да се различава може би или, че ще ми е по-гот да тества повече RR-и на DNS-а.

После разбрах, че е нелегално да използвам CNAME за SRV record от named-checkzone и реших да го
насоча просто към weber, пък ще видим. Така слабите ми доводи реших да ги оставя зарежа и просто да
го насоча към weber.openfmi.net. След това рестартиха сървъра и направих заявка с dig да видя дали
всичко работи и получих отговор. Бях забравил да инкрементирам serial number-а и машината на Ирина
не отговаряше първоначално, ама после бързо го оправих и мина и заявката и към нея. Така вече е
време да видя дали не избързах пак като прочета следващото RFC

Преди да започна четенето Ирина се появи и успешно си писахме и всичко изглежда като да работи. Само
емоджитата на клиентите се разминаваха, ама това се преживява.

RFC8553
Това rfc не знам дали ми беше много от полза. Говори за долните черти в началото на SRV record-а и
споменава, че тук https://tools.ietf.org/html/rfc8552 са дадени различните node name-ове за
различните record-и. Всъщност сега видях, че има _xmpp като record. Ха това е интересно. XMPP
използва tcp обаче. Това леко ме бърка. Веряотно правилният отговор е _xmpp, което е по-конкретно,
ама ще трябва да тествам, като подакарам сървъра. Засега мисля да го оставя на _tcp

Другото, което видях в това rfc е някаква промяна по формата на SRV RR, но заклевам се гледам ги и
двете и виждам, че само едни кавички са сложени отгоре. Помислих си да не трябва и аз да ги сложа,
ама вим-а ми светна като елха и това леко ме отказа. Изглежда ми доста съмнително честно казано.
По-скоро не го разбирам съвсем, а и named-checkzone изрева с кавичките.

Иначе разбрах и че долните черти са, за да се избегнат колизии в dns record-ите. Не знам какви точно
са тези колизии и честно в момента не ми се дълбае толкова.

Гугълнах малко за _xmpp-то и не намерих много освен някакви stack-overflow неща, като това:
https://serverfault.com/questions/150125/redirect-xmpp-with-dns
Видях, че май сие _tcp, и просто е по-смислено за в бъдеще по-подробно да чета rfc-тата, че това
_xmpp просто видях опцията. Има настройки и за _xmpp-client, което може би се използва от сървъра,
за да праща съобщения, а може и да е ненужно. Има и entry за _jabberd, ама това ми се струва
нерелевантно. rfc-то ясно беше описано, че трябва да го има в онзи регистър, а jabberd го няма като
service name. За xmpp-client entry-то мисля, че ще разбера като започна да конфигурирам сървъра и
мога да го зарежа засега. Към другите rfc-та.

RFC6120
Накратко са описани Jabber ID-тата и това, че може един профил да има account асоциран с различни
машини, като се използва resourcepart на jabber id-то. Това го бях чел и преди на уикипедия.
Обяснена е presence stanza-та, която казва дали нашия сървър е наличен и така може да се използва от
машините да знаят дали има смисъл да пращат съобщение, защото знаят дали някой ще ги чуе. Има
persistent streams, които работят с xml. Започват като се прати <stream> таг и приключват със
</stream> таг. Между тях се пращат много на брой xml stanz-и, които са най-ниската мерна единица за
xml. Съответно се изгражда поток за комуникация и се държи отворен, което прави комуникацията почти
инстантна. 

Тук разбрах и че горната ми хипотеза е грешна. Явно е дефинирано с какво се занимава xmpp сървъра и
с какво клиента. Сървъра работи със xml stream-ове и ги преораща. Целта му е да осигури връзка между
XMPP клиенти. Той трябва да може да се върже и към други сървъри, така че да си обменят съобщения.
Това работи леко като мейлите. Не е нужно да си на abv.bg, за да говориш с gmail.com. Има клиент
сървър комункиация, но и server to server също. 

Сървъра също може да кешира контактите на клиентите. Тогава сървъра може без да праща данните до
клиента да обработи някои xml stanz-и, за по-бърза обмяна на съобщения.

Забравих и да спомена, че между сървъра и клиента се отвоаря връзка, като клиента се върже по време
на която се договарят за настройки и клиента се автентифицира. Тук видях, че се използав SASL и TLS
май.

В долната секция вече е описано за какво е xmpp-client. Това е за server-client комункация. Другото
е за server to server. Затова добавих това SRV entry към DNS-а. Подробно е описан процеса на работа
с DNS-а. Как като търсим сървиса първо гледаме за SRV record и после ги подреждаме по приоритет и
тегло и започваме последвателно да ги изпробваме дали работят. Ако получим record с "." като target,
значи няма такъв сървис на сървъра. След намеринато на target-а се прави заявка за откриването на ip
адреса. Накрая, ако нищо не стане опитва  fallback метод, за който се опитва просто да се върже на
сървъра на портовете на съответните проколи в зависимост от това дали си говори с клиент или сървър.
Това с "." го отбелязах, защото може да е добра идея да deny-вам сървиси, които не работят на моят
машина. Това може да ми счупи http сървъра и ще го тествам накрая, но по принцип мисля, че е добра
идея.

RFC7622
Това RFC покрива основно формата на JID-то. Цялостно повечето неща ги бях чел преди за jabberd
backport-а, като го правих. Още тогава бях научили за различните секции. Полезни може да са
забранените символи, ако неще се чупи и си припомних, че @example.com също е валидно JID и може да
сочи към стая например. Също така разбрах, че този синтаксис room@chat.example.com/user@host може да
идентифицира user в чат стая и често се използва(resourcepart-а може да има @). А също се чудех
resourcepart-а дали не е йерархичен и отговорът е не според rfc-то, което е полезно.

За база реших да използвам Postgre главно, защото съм го използвал наскоро и си мисля, че setup-а ще
е лесен. Реших да го инсталирам преди да си пусна jabberd сървъра все пак, макар че очаквам, че ще
трябва да създам потребител и база за него, за да може да се върже иначе ще съм доста озадачен XD.
След бърз apt install вече имам готов postgres работещ на port 5432. Остана да видя как се
конфигурира jabberd, за да мога и да го настроя.

Тръгнах да разглеждам jabberd и видях, че има man страници за jabberd, jabberd-c2s, jabberd-s2s и
jabberd-sm. Първото пуска сървъра. Второто е за връзките клиент сървър. Третото е server to
server(комункаицята между локални компоненти до друг jabberd server), а последното пише просто, че
осигурява instant messaging на клиентите(неща като дистрибуция на съобщения например). c2s се
занимава с автентификацията на клиентите и говори със sm(session manager-а) от тяхно име.

Намерих конфигурационните файлове на jabberd2 под /etc/jabberd2 и в тях имаше само информация на кой
runlevel трябва да се пуска сървъра. Цялостно, ако се опитам да го пусна ми излиза missing group
name съобщението, което не знам на какво се дължи.

Реших този път да послушам съвета ви и да видя какво има по /usr/share/doc. Цялостно забравям, че
тази папка съществува и затова не я отварям. Време е това да се промени. В папката намерих обяснение
как да си конфигурирам postgres, така че да работи с jabberd2 и имаше някакви неща за групи и
таблици, които трябва да се създадат, за да работи. Има голяма вероятност това да се чупи според
мен.

Уж направих setup-а на базата и създадох таблиците, които искаше, ама пак ми дава същата грешка.
Това ще трябва да го прегледам утре, че трябва да спя.

Ииии дойде утре. Еми цялостно прегледах другите файлове в /usr/share/doc/jabberd2 и цялостно не намерих
нищо полезно. Да си призная малко се разочаровах и след това общо взето забих. Не знам съвсем как да
продължа. Гугълнах официалната документация на jabberd2 и намерих този сайт: https://jabberd2.org/
Той ме заведе към няколко сайта, които да обяснят как да setup-на сървъра. Леко ме притеснява, че
пише, че са guide-ове, което казахте да се смали до минимум. Да си призная прегледах man страниците
и /usr/share/doc. Погледнах и README.md-то с идеята да видя за какво реве и цялостно не намерих нищо
полезно. Тези групи, които липсват не знам какви са и гугъл не ми помогна с тях. Да си призная поне
тези guide-ове е добре да ги прочета според мен, а и те реално са самата документация. Наистина не
знам откъде другаде бих си извел информацията, за да си реша проблема. RFC-тата не мисля, че ще
засегнат конкретния ми проблем с този конкретен сървър, така че май това ще е част от малкото
guide-ове, които ще прочета.

Прегледах първо как се инсталира: https://github.com/jabberd2/jabberd2/wiki/InstallGuide-InstallJabberd2
Съответно не видях нищо от полза. Помислих, че може да се наложи да си rebuild-на пакета с поддръжка
за postgres, но се оказа ненужно. Мотивира ме да прегледам по-подробно с какви ./configure опции се
инсталира пакета и видях, че openssl и postgres са пуснати и че това не трябва да ме тревожи. libidn
опцията беше препоръчана и реших да видя какво прави тази библиотека. Разбрах от официалния сайт на
документацията им(https://www.gnu.org/software/libidn/), че libidn е за декодинаране на
интернационализирани domain name-ове. В нашия случай май е ненужно, а и този опция не е по
подразбиране част от debian/rules, от което заключих, че е опционална.

След още малко четене отворих и самите конфигурационни файлове и видях, че са доста добре описани.
Не знам дали идеята е да се опитам спрямо тях да конфигурирам сървъра, ама ще се старая да не чета
много официалните guid-ове. Изглежда ми тъпа идея да си призная, да не направя някоя глупост, ама
каквото.

Разбрах, че трябва сертификатите да са ми в pem формат, а не crt и key файл. Това мисля, че можех да
го оправя с употребата на openssl. По спомен тя конвертираше crt и key към pem и обратно. pem знам,
че е просто друг формат за пазене на сертификати. Преди време бях чел по-подробно какви са
разликите, ама сега не ги помня съвсем. 

Видях и къде трябва да наконфигурирам postgres. То общо взето е наконфигурирано просто трябва да
подменя паролата. Този път реших паролата да е по-сигурна, защото сървъра е публично достъпен и я
направих 16 символа рандъмли генерирана. След това създадох user в базата jabberd2 със съответната
парола и после изтрих старата база и създадох една с owner този потребител. Интересно е, че в
началото има connifno с данни за базата, потребителя и паролата и после има пак същите данни по
отделно в различни тагове. В самия файл има мега много неща. Честно не разбрах всички опции, но
схванах главно какво има.

sm.xml секции, които набелязах:
1) Стандартни настройки на сървъра, като порт ssl и подобни
2) Настройки на базата и ldap
3) Настройки на модулите, които се пускат при получаване, пращане на съобщения, установяване на
връзка и подобни.
4) Настройки при регистрация на потребител.
5) логове
6) xmpp server discovery
7) настройки на модули
8) настройки за групи и контакти на потребител(roster)

Термина roster ми беше неясен и прегледах rfc-то за xmpp и видях, че значи контактите на даден
потребител.

Между другото преждевременно си генерирах нов сертификат за november.fmi.fail да сменя счупения и
вече пак имам А+ на sslabs :D.

Също така се чудя още дали е добра идея да имам друг fqdn за SRV рекорда ми. В смисъл
xmpp.weber.openfmi.net например. Сякаш е по-чисто и мога по-лесно да си различавам услугите. Вярно
не мога да използвам cname, ама каквото. Ще прежаля record-ите да се повтарят. Предпоичтам нещо
по-ясно, което разграничава между service-те ми пред това всичко да отговоря просто на
weber.openfmi.net. Да си призная може да е тъпо решение, ама така го чувствам пък после може да
потърся за съвети. Минус е, че така не си сигурен, ако четеш DNS-а дали двете сочат към същата
машина. Офф май ще го оставя и ще спра да го мисля, че ми е трудно да преценя, а в гугъл не намерих
отговор на конкретния си въпрос и не ми се търси 5 часа.

Преди да продължа да правя глупости гугълнах за pem и crt и си припомних, че реално не е важен
extension-а, а какво има във файла. Моите сертификати може да завършват на crt, но имат PEM формат.
С други думи няма смисъл да генерирам друг тип сертификат или да правя каквото и да било в това
отношение. DER формат е кодинар в binary, а PEM се разпонзава с begin certificate. Съответно казах
на xmpp сървъра да използва сертификатите на nginx, защото мисля, че е по-лесно за поддръжка да
нямам 300 сертификата. Принципно би било досадно да подменям всичките, макар че може да се
автоматизира. Еми не знам. Засега реших така. Не ми се рискува да си призная пак да си затрия
сертификатите. Накрая може да генерирам и други. Ще видим.

След някакви прости конфигурации реших да пробвам да пусна отново sm сървъра и пак даде същата
грешка. Общо взето конфигурирах нещата, които ми се сториха важни, като ip-та, domain name и
подобни. В крайна сметка не сработи и пак даде същата грешка, като по-рано. Реших все пак още малко
да погледна от документацията. Наистина не знам дали това е позволено и ми е леко гузно, ама
каквото. Разбрах, че файловете под /usr/share/doc/jabberd2 са script-ове за автоматизация на
конфигуриране на базата данни и че трябва да ги пусна от postgres. Да си призная приличаха ми на
нещо такова, ама не бях пускал такъв скрипт преди  и вероятно щеше да ми отнеме време да осмисля, че
мога. Това реално беше единственото, което бях пропуснал цялостно от конфигурацията.

Ами нямам късмет явно, защото и това не сработи. Най-накрая се сетих да отворя /var/log/jabberd2 и
да видя какви са логовете и разбрах, че не е успешно връзването към базата. Това обаче беше стар log
и май не е това вече проблема. Чудех се дали ще трябват промени по pb_hba.conf файла, но не съм
сигурен да си призная. Пробвах все пак да направя автентикацията да е само с password, но не
помогна, а и още си мисля, че не е това проблема.

Ок най-накрая имам реален прогрес. В /etc/jabberd2/components.d открих start скрипта на jabberd2
сървисите. Отворих го и го модифицирах да ми принтира ${GROUP} и видях, че е празно. Това вероятно е
проблема и затова дава missing group. Все пак искам да отбележа, че ${USER} си е зададено правилно.
Сега остава да видя как да подам ${GROUP} параметъра или да кажа на сървиса да се стартира с дадена
група. Интересно е, че под init.d/jabberd2 скрипта слага GROUP=jabber. Обаче това не се наследява.
Не знам дали е добра идея да променям init скрипта, ама друга идея нямам. Просто сложих export пред
GROUP и export пред USER, защото после и то изрева нищо, че уж се принтираше и най-накрая сървъра
тръгна. Не знам защо толкова време не се усетих да погледна самия init script. Честно казано
трябваше по-рано да се усетя, че там ще намеря повече информация. Сега грешката е от вече, че не
може да се върже нищо към базата успешно. Иначе tldr на проблема: в init script-а се дефинират
променливи GROUP и USER, които като се пусне run-parts командата, която пуска скриптове от дадена
директория, не се наследяват. Това доведе до неработещ init script и липсващи групи. Като добавих
export променливите се наследиха от run-parts и командата работеше и сървъра тръгна. Време да
оправям postgres.

Сега като работят сървърите се опитах да се вържа към тях с pidgin да тествам dns-а преди да
продължа напред. Исках да знам дали поне там съм оправил конфигурацията и отговорът беше да. Намерих
сървъра и той ме отряза :(, което май се дължи на факта, че е счупен. Все пак стигнах до него и това
май се дължи на работещия DNS, така че поне това е вярно към момента. 

Като начало успях да се вържа към postgres с c2s като използвах plaintext пароли. Това не е много
гот и сега ще се опитам да го променя, но се радвам, че работи. Искам да видя точно как трябва да си
настроя pb_hba.conf файла, за да работи с crypt на jabberd2. Цялостно стига машината да е изолирана
май plaintext паролите са ок. В смисъл, ако само доверени хора са на тази машина и трафикът и е само
вътрешен, както в случая, трудно хакера да се добреде до нещо. Все пак ще се пробвам да го сменя,
защото винаги е по-добре да не разчиташ, че няма как да стане нещо. Сега, ако хакера има профил на
сървъра, дори да не е root вероятно може да се добере по-лесно до данните. Идеята ми е, че трябва да
се сложи сертификат на базата и сертификат на сървъра. Също така не искам паролите да се записват в
plaintext както се случва в момента.

Прегледах една от опциите за password-type, която беше crypt: https://man7.org/linux/man-pages/man3/crypt.3.html
Общо взето ползва DES и това е старо и дори в ман страницата пише, че е лоша идея да се използва. Не
виждам разлика.

Сега като се вгледам май правих твърде много паралели с други неща, които съм писал. Съответно се
усетих, че ако просто върна pb_hba.conf файла към началния вариант(md5 за автентикация) то пак
всичко си работи. Проблемът беше, че бях пуснал не plaintext, а crypt без да се замисля като опция.
И това го е чупело, а то отгоре си пише, че това не работи, ако се използват хешове така или иначе.
След това и session manager-а и c2s успешно се връзваха към postgres.

Имах проблеми с /var/run/jabberd2/sm.pid файла, че нямаше jabber потребителя права да го пипа и
затова му дадох на групата с chown и chmod write права и една грешка по-малко имам вече. Не знам
дали не е добре да дам права на jabber потребителя за цялата папка. Това ще го реша в последствие
обаче. Това реших да го добавя тук, защото е по темата. Към ред 400 видях в различните файлове, че
има pid файл, към който сочат, които е под същата директория и за да няма проблеми дадох права на
jabberd да пише и чете от тях и го направих owner направо.

Основните неща, които остават да се оправят са pem файловете, че не се зареждат успешно и другия
проблем е, че s2s още не съм го наконфигурирал.

За ssl сертификата пак прочетох описанието и е ясно казано, че трябва да се подаде един файл, който
е съдържа сертификата и ключа. Съответно не мога да му подам само weber.crt. За целта конкатенирах
weber.crt с weber.key и ги подадох на сървъра и взе, че стана :D.

Подкарах и TLS-а за c2s. pidgin спря да реве, че сървъра ми е съмнителен. Трябва обаче да прочета
SASL как работи, защото още не мога да се вържа към сървъра и ми дава:
SASL callback for non-existing host: weber.openfmi.net
Това според мен се дължи на това, че аз правя някаква глупост и не съм го доконфигурирал.
Преди да продължа обаче може да е добра идея да обясня как пуснах tls-а. Първо в секцията с
<pemfile> добавих пътя до моя сертификат. После в секцията, в която се дефинира id-то/името на
хоста. В него може да се подаде дали е задължително клиента да използва ssl, което разбира се, че
реших да е да. Подадох и pemfile-а и тук. Не съм сигурен каква е разликата между двете секции. Ако
остане време ще поразуча и за това. Прегледах и verify-mode-овете за tls тук:
https://linux.die.net/man/3/ssl_set_verify и реших, че поне в случая на клиента не искам да го
верифицрам. Не искам да трябва да си правя ssl сертификат, само за да мога да си говоря с приятели
по нета, а и би било досадно за тестване. 

Само да кажа, че /var/log е много удобно в случая и постоянно го гледам, за да дебъгвам какво се
чупи. Предполагам е нормално де. Логовете са за това, ама мисля, че главно се радвам, че не съм вече
забил на групите. Та това е за днес и ще се моля утре да ми стигне времето да довърша, че ми се спи
и е късно.

Ами днеска имам доста работа оставаща. Не знам дали ще ми стигне времето да довърша докрай, ама ще
се опитам. Сега на другия ден със малко по свеж ум разбрах защо на две места се слага pemfile-а за
tls. Едното е за връзката с router-а(pemfile тага), а другото за връзката с клиента(при id тага за
домейна). Вчера бях доста уморен като работех и явно мозъкът ми директно не е видял очевидно
написания коментар.

Иначе сега плана е да видя как router-а работи и каква точно му е ролята, че леко това ми се губи.
Цялостно не виждам къде участва освен да не е връзката със самата мрежа. Сега ще разгледам. Това
мисля, че е първото нещо, което пропускам. Другото е как работи SASL.

Router-а разбрах, че служи за пращане на пакети по мрежата и комуникация между компонентите, т.е. на
c2s с sm и s2s например. Също така в това rfc: https://tools.ietf.org/html/rfc6121 видях как да си
по-ясно какво значат термини като presence и subscriptions в секция 1.3. roster както по-горе
разбрах са ти контактите. Мисля, че може да се използва и за обозначаване на хора в даден чат/група.
Presence показва на хората, че си на линия и дали искаш да говориш с тях. Това го има и в
месинджър/скайп/microsoft teams и 300-те други почти еднакви платформи. subscription означава, че
някой ти е позволил да знаеш дали той е на линия или не. Всичките тези неща ги прави session
manager-а, както и самото пренасочване на заявките. c2s е автентикация и връзка с клиента. s2s е
връзки с друг сървис както по-горе бях обяснил.

Сега като не съм уморен файловете с конфигурациите се четат доста по-лесно. router.xml файлът общо
взето го разгледах. В него има acl-и за контрол на кой потребител има достъп до какво. Има файл с
филтри за различни видове пакети. Има настройки за log-ове. Настройки за това на кой ip адрес и порт
да слуша рутера, като ги оставих на стойностите по подразбиране. Единствено добавих pemfile-а, който
се използва за изграждане на ssl връзка с другата страна. Към момента всичките ми компоненти
използват един и същи pemfile. Това поне си мисля, че не би трябвало да проблем. Вероятно е по-добре
да са с различни за по-голяма сигурност, но би трябвало да работи като цяло. Има и настройка за
secret, който се отнася за XEP0114 компоненти, което гугълнах и намерих това:
https://xmpp.org/extensions/xep-0114.html. Описано е накратко, че за да може даден компонент да
работи със сървъра, той трябва да бъде одобрен. За целта се използва pre-shared key(този secret) за
хеширане и пращане на credentials до сървъра. Пише, че се използва sha1, което май е старо. Мога да
греша, но не е ли deprecated и да се използва например от git за съхранение на голямо количество
данни? Според гугъл от 2005 насам sha1 не е secure. Еми шанс. Иначе това се е използвало за
компоненти, които не поддържат нито SASL нито работят със някакъв стар метод на автениткация.


В s2s конфигурацията имаше пак стандартните опции. Интересно беш, че lookup частта за srv record-и.
От там пуснах ipv6 и също така видях, че jabber се е използвало преди вместо xmpp-server, което
обяснява горния stack overflow. Според мен за lookup е ок да го оставя, но вече съм сигурен, за да
работи с по-стари конфигурации, но цялостно нямам нужда от мой такъв SRV RR. dns опциите като цяло
ми се стори ненужно да ги пипам. По подразбиране са си ок според мен.

За TLS-а в този файл оставих да се изисква от други xmpp сървъри валеден сертификат. Струва ми се
лоша идея да се доверявам на несигурни сървъри и там мисля, че добра идея да ги верифицирам и тях, а
не само себе си. Една от опциите не ми беше ясно за cachain. Това е по описание certificate chain за
tls, ама това може да значи много неща, а и моя certificate chain е в pem файла така или иначе. Не
знам дали не е нужно отново да въведа същия сертификат? Ако нещо се чупи или не работи е добре да го
погледна, че не искам да използвам все още гайдове. Иначе в интернет общо взето не намерих нещо
полезно по темата освен какво е certificate chain, а това вече го знам, така че нямаше много полза.
В security пунсах require_tls опцията също. В c2s файла има същия таг и там е обяснено, че cachain
са ca-овете, които се използват за верификация на чужди сертификати.

След като прегледах конфигурациите за рутера и за s2s-а и видях в логовете, че всичко е тръгнало
успешно и сертификатите са се заредили се зарадвах. Остана само да разбера точно как да си създа
потребител. Уеб портал ли ми трябва или нещо друго и също така да видя дали горната грешка за SASL,
която виждам е причинена от липсата на потребител или аз нещо пропсускам.

За SASL прочетох rfc-то: https://tools.ietf.org/html/rfc4422#section-3 . Главно introduction-а и
секция 3, в която е описано общо взето, че клиента праща заявка към сървъра и сървъра го предизвиква
да потвърди кой е. Ако това е успешно, той е допуснат иначе не е. Самия SASL добавя абстрактен
слой между протоколи и механизми за автентикация. Нещо като generic API, което се използва, за да
можеш да използваш различни видове автентикация по сходен начин и да се абстрахираш от
имплементацията. Цялостно ми напомня на apache portable runtime, но за security, а не разговори с
базата.

Горния проблем разбрах на какво се дължи. Имах интервали в xml-а и това го чупеше. Мислех, че не се
зачитат, ама явно се. Като ги махнах се махна грешката за SASL callback for non-existing host:
weber.openfmi.net. След това открих как на pidgin да си регистрирам потребител и при опит се появи
друга грешка: pgsql: sql select failed: ERROR:  permission denied for relation authreg. Бързо
разбрах, че не съм дал права на потребителя ми да пипа таблиците в базата и се поправих, като
използвах grant командите, които са споменати тук:
https://dba.stackexchange.com/questions/36870/permission-denied-in-postgres

След това успях да се регистрирам на jabber сървъра си и го използвах и изхабих малкото оставащо
време на Ирина, за да го тестваме заедно. Тя си създаде профил и после си разменихме няколко
съобщения, което общо взето значи, че всичко работи по отношение клиент сървър, session manager и
router. Добавих Ирина като buddy и видях в базата, че са добавени entry-та за това, че сме buddy-та.
Опитах се да намеря дали мога да създам chatroom, ама нещо не намерих как става. Уж го поддържа xmpp
според това https://xmpp.org/extensions/xep-0045.html , но веряотно изисква друга конфигурация. Не
съм сигурен. Създадох си и admin потребител, който има повечко права да прави каквото си иска общо
взето и му дадох по-сложна парола за здраве. Веряотно ще съжаля после, ама каквото. Опитах се и с
него да създам чат стая, ама мисля, че просто не го правя правилно, защото заявката не стига до
сървъра дори, а и май не е жизнено важно, така че е добра идея да погледна другите неща. Лошото е,
че си бях пуснал c2s и s2s тестове да видя какво ще каже сайта и сега трябва да го чакам, да видя
дали ssl конфигурацията ми е ок.

Изчаках малко и от първия опит c2s score-а на сървъра ми беше A, така че тази част от заданието е
готова. Сега ще пробвам s2s и ще се моля, че работи. Лошото е, че s2s-а май не работи. Дава, че не е
успяло да се върже. Интересно е, че s2s настройките не бяха отразени в теста. Мисля, че нещо или DNS
RR-а не работи, което ме съмнява, защото за c2s работи. Все пак го проверих и всичко изглеждаше ок.
Това определено не е проблема.

Прегледах това: https://github.com/jabberd2/jabberd2/wiki/InstallGuide-s2sConfiguration с
информацията за s2s конфигурационния файл и не научих нищо особено полезно освен, че е добра идея да
си задам secret за сървъра понеже технически съм на нещо като production. Всеки може да се върже.

Иначе сървъра работи. Търсих някакви конфигурации за домейн или нещо подобно, ама нямаше по незнайни
за мен причини. Прегполагам поради DNS record-а, който съществува. s2s основно прави lookup-и
доколкото виждам. Предчуствам, че изпускам нещо малко и глупаво, ама не се сещам какво може да е.

Още се чудех какво се случва и Ирина ми се похвали, че си е подкарала server-а и искаше да го
тества. След това си създадох профил и й писах успешно от donizetti към donizetti. Реших да видя
дали s2s-а работи. Вързах се към моя jabberd сървър и пратих на Ирина съобщение и стана. Тя ми
отговаряше също. После прегледах log-овете на s2s и изписа, че имаме успешно установена връзка по
TLS, така че би трябвало да работи. Сайта обаче пак не успя да се върже. Уж s2s работи. Не съм
сигурен какво е.

Пак сайта ми казва, че не работи. Имам усещатането, че верификацията на чужди сертификати не ми
работи, защото не съм подал cachain. Сега гледам дали има начин да се го генерирам certificate chain
или откъде мога да взема root-ca сертификати. Да си призная не знам дали трябва, имайки предвид, че
самия линукс според мен си има списък с доверени CA-и, които бих очаквал да пита. То даже леко ме
съмнява, че това е идеята на тази опция. По-скоро е ако имаме някой друг custom ca, който трябва да
питам, а не глобалните. Второто ми е по-логично, ако трябва да съм честем, ама не знам. В гугъл
намерих, че cachain е ако искам аз да имам custom ca, а не глобалните. Примерно self signed
сертификат и аз да си генерирам ca сертификат мой си, който никой не признава, ама така ще работи
със сървъра. Демек май не е това моя проблем. Офф не знам. Ама имам малко време и ме притеснява, а и
реално имам само още 2 опита. Тъпото е, че s2s със сървъра на Ирина работи и не знам защо с този на
сайта не работи. Пробвах и от другия си профил на kode.im, където се регистрирах в началото да си
пиша и работеше. Да си призная не знам. Работи с други машини. Странно ми е да ми казва, че просто
не може да се върже. Поне да получавах оценка.

Ами нещо обвързано с verify-mode опцията е. Изчаках 30 минути, да видя дали ще мине, ако го
закоментирам. Директно не знам защо не минава. Остава горната ми хипотеза, че е нещо със cachain или
certificate authority-та. Като го пуснах с без verify-mode мина с A. Ще прочета още малко и очевидно
и с verify mode работеше с Ирина и kode.im, така че не знам на какъв принцип техния сертификат не е
ок, ама каквото. Сега поне мина. 

Потърсих още малко в интернет да видя дали нещо ще намеря. Прочетох и по-подробно man страницата за
ssl_set_verify: https://linux.die.net/man/3/ssl_set_verify и още не намирам каква е причината.
Намерих това: https://github.com/jabberd2/jabberd2/wiki/InstallGuide-Jabberd2Architecture#1322_S2S и
го разгледах и щеше да е доста удобно като цяло да го погледна по-рано.

Еми това е май. Не откривам причината. Нещо със CA-я е според мен, ама не знам какво. Еми уморен съм
и ако давам с този дух ще ме заболи глава, така че това е от мен. Между другото в c2s файла затрих
конфигурациите на другите типове бази и ldap, които се предлагат. Мислех си в даден момент, че може
да взима грешна конфигурация и затова да не тръгва. Това беше още при проблемите с групите. Бях
разумен и направих backup за всеки случай, ако ми трябва за в бъдеще, а и в /usr/share/doc/jabberd2
има примерни конфигурации, които са много сходни така или иначе. Все пак реших да го напиша тук да
не се чудите какъв е c2s backup файла. Друго май няма. Вече си имам работещ xmpp server. Гот :D.

Време: 17 часа
